; Relay license key (via https://relay.so).
; Without a license key Relay will throttle to 16MB memory one hour after startup.
;
; relay.key =

; The environment Relay is running in.
; Supported values: `production`, `staging`, `testing`, `development`
;
relay.environment = testing

; How much memory Relay allocates on startup. This value can either be a
; number like 134217728 or a unit (e.g. 128M) like memory_limit.
; See: https://php.net/manual/faq.using.php#faq.using.shorthandbytes
;
; Relay will allocate at least 16M for overhead structures.
; Set to `0` to disable in-memory caching and use as client only.
;
relay.maxmemory = 512M

; evict least frequently used cache entries when full
;
relay.eviction_policy = lru

; At what percentage of used memory should Relay start evicting keys.
relay.maxmemory_pct = 99

; don't use multiple databases (as redis does not support it well)
;
relay.databases = 1

; only use one database per task/container
;
relay.max_endpoint_dbs = 1

; as of 2025-02-13, the recommended setting for glibc systems is `adaptive-mutex`
; see https://relay.so/docs/1.x/performance
; Supported values: `spinlock`, `mutex`, `adaptive-mutex`
;
relay.locks.allocator = adaptive-mutex
relay.locks.cache = adaptive-mutex

; How many keys should we scan each time we process evictions.
;
relay.eviction_sample_keys = 32

; Use a persistent connection when calling `connect()`.
;
relay.default_pconnect = 1

; How often (in microseconds) Relay should proactively check the
; connection for invalidation messages from Redis.
;
relay.invalidation_poll_freq = 5

; The log level.
; Supported levels: `debug`, `verbose`, `notice`, `error`, `off`
;
relay.loglevel = error
relay.logfile = stderr
